generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma/client"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id                   String       @id @default(uuid())
  nome                 String
  dataNascimento       String?
  contato              String?
  email                String?      @unique
  typeDocumentSelected String?
  documento            String?      @unique
  cidade               String?
  bairro               String?
  rua                  String?
  numero               String?
  ultimaViagem         DateTime?
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  dependentes          Dependente[] @relation("DependentesDoCliente")
  passageiro           Passageiro?  @relation("PassageiroDoCliente")
}

model Dependente {
  id                   String      @id @default(uuid())
  nome                 String
  typeDocumentSelected String?
  documento            String?     @unique
  clienteId            String
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  cliente              Cliente     @relation("DependentesDoCliente", fields: [clienteId], references: [id], onDelete: Cascade)
  passageiro           Passageiro? @relation("PassageiroDoDependente")
}

model Passageiro {
  id                   String      @id @default(uuid())
  nome                 String
  typeDocumentSelected String
  documento            String      @unique
  clienteId            String?     @unique
  dependenteId         String?     @unique
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  cliente              Cliente?    @relation("PassageiroDoCliente", fields: [clienteId], references: [id], onDelete: Cascade)
  dependente           Dependente? @relation("PassageiroDoDependente", fields: [dependenteId], references: [id])
}

model FluxoCaixa {
  id             String         @id @default(uuid())
  tipo           TipoOperacao
  valor          Float
  data           DateTime
  formaPagamento FormaPagamento
  descricao      String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model SaldoAnterior {
  id            String   @id @default(uuid())
  mes           String
  ano           String
  saldoAnterior Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([mes, ano])
}

enum TipoOperacao {
  ENTRADA
  SAIDA
}

enum FormaPagamento {
  PIX
  DINHEIRO
  CARTAO_DE_CREDITO
}

model Usuario {
  id    Int    @id @default(autoincrement())
  email String @unique
  senha String
  nome  String
}
